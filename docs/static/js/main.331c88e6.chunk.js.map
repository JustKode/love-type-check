{"version":3,"sources":["components/selectBox.js","components/resultBox.js","App.js","util/type_check.js","reportWebVitals.js","index.js"],"names":["MainContainer","styled","div","QuestionContainer","InputContainer","MiddleWrapper","span","Input","SelectBox","id","question","setState","useState","selected","setSelected","inputs","map","x","className","num","Math","abs","onClick","e","TitleContainer","TitleWrapper","ContentContainer","Content","ContentTitle","ContentComments","GaugeTitle","GaugeBox","GaugeBar","props","color","width","Gauge","info","floor","ResultBox","type","contents","results_components","result","contents_components","title","content","SubContainer","DescriptionContainer","SelectBoxContainer","StatusBarContainer","ButtonContainer","SubmitButton","button","App","Array","question_data","length","selects","setSelects","setResult","setSelect","index","value","new_selects","questions","selected_num","i","undefined","percent","viewResult","results","score","score_index","weight","bias","softmax_score","softmax_sum","push","exp","sort","left","right","type_check","console","log","result_data","alert","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.331c88e6.chunk.js","sourcesContent":["import styled from \"styled-components\"\nimport { useState } from \"react\"\n\nconst MainContainer = styled.div`\n  margin: 40px 8px;\n  text-align: center;\n`\n\nconst QuestionContainer = styled.div`\n  margin: 16px 0;\n  font-weight: bold;\n  font-size: 20px;\n`\n\nconst InputContainer = styled.div`\n  font-size: 12px;\n  font-weight: bold;\n  height: 40px;\n  line-height: 40px;\n`\n\nconst MiddleWrapper = styled.span`\n  vertical-align: top;\n`\n\nconst Input = styled.div`\n  display: inline-block;\n  box-sizing: border-box;\n  margin: 0 8px;\n  transition: 0.3s;\n\n  &.zero {\n    width: 32px;\n    height: 32px;\n    border-radius: 16px;\n    border: 2px solid #bbbbbb !important;  \n  }\n\n  &.zero:hover, &.zero.selected {\n    background-color: #bbbbbb !important;\n  }\n\n  &.one {\n    width: 36px;\n    height: 36px;\n    border-radius: 18px;\n  }\n\n  &.two {\n    width: 40px;\n    height: 40px;\n    border-radius: 20px;\n  }\n\n  &.green {\n    border: 2px solid green;\n  }\n\n  &.green:hover, &.green.selected {\n    background-color: green;\n  }\n\n  &.red {\n    border: 2px solid red;\n  }\n\n  &.red:hover, &.red.selected {\n    background-color: red;\n  }\n`\nexport default function SelectBox({id, question, setState}) {\n  const [selected, setSelected] = useState(0)\n  const number_to_string = (num) => {\n    num = Math.abs(num - 3)\n    if (num === 0)\n      return 'zero'\n    else if (num === 1)\n      return 'one'\n    else\n      return 'two'\n  }\n  const inputs = [5, 4, 3, 2, 1].map(x => (\n      <Input\n        key={`${id}-${x}`}\n        className={`${number_to_string(x)} ${x >= 3 ? 'green' : 'red'} ${selected === x && \"selected\"}`}\n        onClick={e => {setState(id, x); setSelected(x)}}\n      />\n    )\n  )\n\n  return (\n    <MainContainer>\n      <QuestionContainer>\n        {question}\n      </QuestionContainer>\n      <InputContainer>\n        <MiddleWrapper>동의</MiddleWrapper> {inputs} <MiddleWrapper>비동의</MiddleWrapper>\n      </InputContainer>\n    </MainContainer>\n  )\n}","import styled from \"styled-components\";\n\n\nconst MainContainer = styled.div`\n  margin: 40px 0;\n  padding: 20px;\n`\n\nconst TitleContainer = styled.div`\n  font-size: 18px;\n  text-align: center;\n`\n\nconst TitleWrapper = styled.span`\n  color: orange;\n  font-size: 32px;\n  font-weight: bold;\n`\n\nconst ContentContainer = styled.div`\n\n`\n\nconst Content = styled.div`\n  margin: 20px 0;\n`\n\nconst ContentTitle = styled.div`\n  font-weight: bold;\n  font-size: 24px;\n  margin: 16px 0;\n`\n\nconst ContentComments = styled.div`\n  font-size: 16px;\n`\n\nconst GaugeTitle = styled.div`\n  font-size: 14px;\n  font-weight: bold;\n  text-align: center;\n  margin: 8px 0;\n`\n\nconst GaugeBox = styled.div`\n  height: 20px;\n  max-width: 400px;\n  margin: auto;\n  border: 1px solid #eeeeee;\n  border-radius: 8px;\n`\n\nconst GaugeBar = styled.div`\n  height: 20px;\n  background-color: ${props => props.color};\n  width: ${props => props.width}%;\n  border-radius: 8px;\n`\n\nfunction Gauge({info}) {\n  const color_dict = {\n    \"공생\": \"#8fb9aa\",\n    \"쾌락\": \"#ed8975\",\n    \"생산\": \"#f2d096\",\n    \"소유\": \"#304d63\"\n  }\n  return <>\n    <GaugeTitle>\n      {info[1]} : {Math.floor(1000 * info[0]) / 10}%</GaugeTitle>\n    <GaugeBox>\n      <GaugeBar color={color_dict[info[1]]} width={Math.floor(1000 * info[0]) / 10}/>\n    </GaugeBox>\n  </>\n}\n\n\nexport default function ResultBox({type, contents, result}) {\n  const results_components = result.map(x => (<Gauge info={x}/>))\n  const contents_components = contents.map(x => (\n    <Content>\n      <ContentTitle>{x.title}</ContentTitle>\n      <ContentComments>{x.content}</ContentComments>\n    </Content>\n  ))\n\n  return (\n    <MainContainer>\n      <TitleContainer>\n        당신의 타입은...<br/>\n        <TitleWrapper>{type}</TitleWrapper> 입니다.\n      </TitleContainer>\n      {results_components}\n      <ContentContainer>\n        {contents_components}\n      </ContentContainer>\n    </MainContainer>\n  )\n}","import { useState } from 'react'\nimport styled from 'styled-components'\nimport SelectBox from './components/selectBox'\nimport ResultBox from './components/resultBox'\nimport question_data from './data/question_data.json'\nimport result_data from './data/result_data.json'\nimport type_check from './util/type_check'\n\n\nconst MainContainer = styled.div`\n  padding: 20px;\n  background-color: mintcream;\n  min-height: 100vh;\n`\n\nconst SubContainer = styled.div`\n  max-width: 720px;\n  margin: auto;\n  background-color: white;\n  border: 1px solid #cccccc;\n`\n\nconst TitleContainer = styled.div`\n  margin: 16px 8px;\n  text-align: center;\n  font-weight: bold;\n  font-size: 32px;\n`\n\nconst DescriptionContainer = styled.div`\n  margin: 8px;\n  font-size: 16px;\n  padding: 20px;\n  text-align: center;\n`\n\nconst SelectBoxContainer = styled.div`\n\n`\n\nconst StatusBarContainer = styled.div`\n  position: fixed;\n  bottom: 0;\n`\n\nconst ButtonContainer = styled.div`\n  text-align: center;\n  margin: 16px 0;\n`\n\nconst SubmitButton = styled.button`\n  margin-top: 20px;\n  padding: 6px 12px;\n  font-size: 18px;\n  border: none;\n  border-radius: 4px;\n  color: white;\n  background-color: black;\n`\n\nfunction App() {\n  const [selects, setSelects] = useState(Array(question_data.length))\n  const [result, setResult] = useState(<></>)\n  const setSelect = (index, value) => {\n    let new_selects = [...selects]\n    new_selects[index] = value\n    setSelects(new_selects)\n  }\n\n  const questions = question_data.map(x => <SelectBox key={x.id} {...x} setState={setSelect}/>)\n  let selected_num = 0.0\n  for (let i = 0; i < question_data.length; i++) {\n    if (selects[i] !== undefined) {\n      selected_num += 1.0\n    }\n  }\n  const percent = Math.floor(100 * selected_num / question_data.length)\n\n  const viewResult = () => {\n    if (percent !== 100) {\n      alert(\"모든 문항을 선택 해 주세요\")\n      return\n    }\n\n    const result = type_check(selects)\n    const type = result[0][1] + \"-\" + result[1][1]\n\n    console.log(result)\n\n    let contents\n\n    for (let i = 0; i < result_data.length; i++) {\n      if (result_data[i].type === type) {\n        contents = result_data[i].contents\n        break\n      }\n    }\n\n    setResult(<ResultBox type={type} contents={contents} result={result}/>)\n  }\n\n  return (\n    <MainContainer>\n      <SubContainer>\n        <TitleContainer>AI로 보는 사랑의 유형 테스트</TitleContainer>\n        <DescriptionContainer>\n          해당 테스트는 <strong>에리히 프롬의 [사랑의 기술]</strong>의 이론을 기반하여 제작 되었습니다. <br/><br/>\n          나의 경험과 의미를 중요시 하는 <strong>생산의 사랑</strong><br/>\n          연인간의 의존 관계를 중요시 하는 <strong>공생의 사랑</strong><br/>\n          감각적인 요소들을 중요시 하는 <strong>쾌락의 사랑</strong><br/>\n          상대방과의 신뢰를 중요시 하는 <strong>소유의 사랑</strong><br/><br/>\n          이 테스트를 통해, 당신의 <strong>사랑의 유형</strong>을 <strong>테스트</strong> 해 보세요!\n        </DescriptionContainer>\n        <SelectBoxContainer>\n          {questions}\n        </SelectBoxContainer>\n        <ButtonContainer>\n          <SubmitButton onClick={e => {viewResult()}}>테스트 결과 확인하기</SubmitButton>\n        </ButtonContainer>\n        {result}\n      </SubContainer>\n      <StatusBarContainer>\n        <div>\n          {percent} %\n        </div>\n      </StatusBarContainer>\n    </MainContainer>\n  );\n}\n\nexport default App;\n","import weight from '../data/weight.json'\n\nexport default function type_check(results) {\n  let score = [0.0, 0.0, 0.0, 0.0]\n  \n  // weight 연산\n  for (let score_index = 0; score_index < 4; score_index++) {\n    for (let index = 0; index < 20; index++) {\n      score[score_index] += weight.weight[score_index][index] * (results[index] - 3) / 2\n    }\n    score[score_index] += weight.bias[score_index]\n  }\n\n  let softmax_score = []\n  let softmax_sum = 0.0\n  for (let index = 0; index < 4; index++) {\n    softmax_score.push(Math.exp(score[index]))\n    softmax_sum += Math.exp(score[index])\n  }\n\n  for (let index = 0; index < 4; index++) {\n    softmax_score[index] /= softmax_sum\n  }\n  \n  let result = [[softmax_score[0], \"공생\"], [softmax_score[1], \"쾌락\"], [softmax_score[2], \"생산\"], [softmax_score[3], \"소유\"]]\n\n  result.sort(function(left, right) {\n    return left[0] > right[0] ? -1 : 1;\n  })\n\n  return result\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}